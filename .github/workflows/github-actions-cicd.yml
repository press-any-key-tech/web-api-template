name: github-actions-cicd

on:
  # push:
  #   branches:
  #     - main

  release:
    types: [created]

  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
      tags:
        description: "Manual launch"
jobs:
  BuildJob:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print release information
        run: |
          echo "Release tag: ${{ github.event.release.tag_name }}"
          echo "Release description: ${{ github.event.release.body }}"

      - name: Set ImageTag
        id: version
        run: |
          if [[ "${{ github.event.release.tag_name }}" != "" ]]; then
            echo "IMAGE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=0.0.0" >> $GITHUB_ENV
          fi

      # - name: Read VERSION.txt and set ImageTag
      #   id: version
      #   run: |
      #     VERSION=$(cat VERSION.txt)
      #     echo "IMAGE_TAG=${VERSION}.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Display Image Tag
        run: echo "IMAGE_TAG is ${{ env.IMAGE_TAG }}"

      # - name: Display Env vars
      #   run: |
      #     echo "AWS_REGION is ${{ vars.AWS_REGION }}"
      #     echo "ECR_REPOSITORY is ${{ vars.ECR_REPOSITORY }}"
      #     echo "DOCKER_HUB_REPOSITORY is ${{ vars.DOCKER_HUB_REPOSITORY }}"
      #     echo "DOCKER_HUB_USERNAME is ${{ secrets.DOCKER_HUB_USERNAME }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to DockerHub
        id: login-dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push image
        id: build-push-image
        uses: docker/build-push-action@v2
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest
            ${{ vars.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ vars.DOCKER_HUB_REPOSITORY }}:latest
